apiVersion: v1
kind: Secret
metadata:
  name: namecheap-credentials
  namespace: cert-manager
type: Opaque
data:
  apiKey: {{ .Values.namecheap.apiKey | b64enc | quote }}
  apiUser: {{ .Values.namecheap.apiUser | b64enc | quote }}
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-issuer
spec:
  acme:
    email: {{ .Values.email }}
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-secret
    solvers:
    - dns01:
        webhook:
          groupName: acme.namecheap.com
          solverName: namecheap
          config:
            apiKeySecretRef:
              name: namecheap-credentials
              key: apiKey
            apiUserSecretRef:
              name: namecheap-credentials
              key: apiUser

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: shared-secret-reader
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: shared-secret-reader
subjects:
- kind: Group
  name: system:authenticated
  apiGroup: rbac.authorization.k8s.io
- kind: Group
  name: system:unauthenticated
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: shared-secret-reader
  apiGroup: rbac.authorization.k8s.io

{{ range .Values.certs }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "{{ . | replace "." "-" }}-cert"
spec:
  secretName: "{{ . | replace "." "-" }}-cert"
  commonName: "{{ . }}"
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-issuer
  dnsNames:
  - "{{ . }}"
  - "*.{{ . }}"
{{ end }}
