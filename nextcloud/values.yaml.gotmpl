image:
  repository: ghcr.io/razzie/nextcloud
  tag: 25.0.3-apache-custom
  flavor: apache
  pullPolicy: Always

fullnameOverride: nextcloud

nextcloud:
  host: nextcloud:8080
  username: razzie
  password: password

  s3:
    bucket: {{ requiredEnv "NEXTCLOUD_S3_BUCKET" | quote }}
    endpoint: {{ requiredEnv "NEXTCLOUD_S3_ENDPOINT" | quote }}
    region: {{ requiredEnv "NEXTCLOUD_S3_REGION" | quote }}
    accessKey: {{ requiredEnv "NEXTCLOUD_S3_ACCESS_KEY" | quote }}
    secretKey: {{ requiredEnv "NEXTCLOUD_S3_SECRET_KEY" | quote }}
    encryptionKey: {{ requiredEnv "NEXTCLOUD_S3_ENCRYPTION_KEY" | quote }}

  backupPassword: {{ requiredEnv "NEXTCLOUD_BACKUP_PASSWORD" | quote }}

  configs:
    custom.config.php: |-
      <?php
      $CONFIG = array (
        'overwritehost' => 'razzie.cloud',
        'overwriteprotocol' => 'https',
        'overwrite.cli.url' => 'https://razzie.cloud',
        'filelocking.enabled' => 'true',
        'loglevel' => '2',
        'trusted_domains' =>
          [
            'razzie.cloud'
          ],
        'trusted_proxies' =>
          [
            '10.0.0.0/8'
          ],
        'forwarded_for_headers' =>
          [
            'X-Forwarded-For'
          ],
        'datadirectory' => getenv('NEXTCLOUD_DATA_DIR') ?: '/var/www/html/data',
        'enable_previews' => true,
        'preview_max_x' => 4096,
        'preview_max_y' => 4096,
        'enabledPreviewProviders' => [
          'OC\\Preview\\TXT',
          'OC\\Preview\\MarkDown',
          'OC\\Preview\\PDF',
          'OC\\Preview\\MSOfficeDoc',
          'OC\\Preview\\JPEG',
          'OC\\Preview\\PNG',
          'OC\\Preview\\GIF',
          'OC\\Preview\\BMP',
          'OC\\Preview\\XBitmap',
          'OC\\Preview\\MP3',
          'OC\\Preview\\HEIC',
          'OC\\Preview\\Movie',
          'OC\\Preview\\MKV',
          'OC\\Preview\\MP4',
          'OC\\Preview\\AVI',
          'OC\\Preview\\MP3',
          'OC\\Preview\\OpenDocument',
          'OC\\Preview\\Krita',
          'OC\\Preview\\Imaginary',
        ],
        'preview_imaginary_url' => 'http://imaginary.shared.svc.cluster.local:9000',
        'default_phone_region' => 'HU',
      );
    postgres.config.php: |-
      <?php
      $postgresConnStr = parse_url(getenv('POSTGRES_ADDR'));
      $CONFIG = array (
        'dbtype' => 'pgsql',
        'dbname' => substr($postgresConnStr['path'], 1),
        'dbuser' => $postgresConnStr['user'],
        'dbpassword' => urldecode($postgresConnStr['pass']),
        'dbhost' => $postgresConnStr['host'],
        'dbport' => $postgresConnStr['port'] ?? 5432,
      );
    redis.config.php: |-
      <?php
      $redisConnStr = parse_url(getenv('REDIS_ADDR'));
      $CONFIG = array (
        'memcache.local' => '\\OC\\Memcache\\APCu',
        'memcache.distributed' => '\\OC\\Memcache\\Redis',
        'memcache.locking' => '\\OC\\Memcache\\Redis',
        'redis' => array(
          'host' => $redisConnStr['host'],
          'port' => $redisConnStr['port'],
          'password' => urldecode($redisConnStr['pass']),
        ),
      );
    s3.config.php: |-
      <?php
      $CONFIG = array (
        'objectstore' => array(
          'class' => '\\OC\\Files\\ObjectStore\\S3',
          'arguments' => array(
            'bucket'     => getenv('S3_BUCKET'),
            'autocreate' => false,
            'key'        => getenv('S3_ACCESS_KEY'),
            'secret'     => getenv('S3_SECRET_KEY'),
            'region'     => getenv('S3_REGION'),
            'hostname'   => 'localhost', //getenv('S3_ENDPOINT'),
            'port'       => 6080,
            'use_ssl'    => false,
            'use_path_style' => true,
            'legacy_auth' => true,
          ),
        )
      );
    autoconfig.php: |-
      <?php
      $postgresConnStr = parse_url(getenv('POSTGRES_ADDR'));
      $AUTOCONFIG = array (
        'dbtype' => 'pgsql',
        'dbname' => substr($postgresConnStr['path'], 1),
        'dbuser' => $postgresConnStr['user'],
        'dbpass' => urldecode($postgresConnStr['pass']),
        'dbhost' => $postgresConnStr['host'],
        'dbport' => $postgresConnStr['port'] ?? 5432,
        'directory' => getenv('NEXTCLOUD_DATA_DIR') ?: '/var/www/html/data',
        'adminlogin' => 'razzie',
        'adminpass' => 'password',
      );
      $autoconfig_enabled = true;

  defaultConfigs:
    .htaccess: true
    apache-pretty-urls.config.php: true
    apcu.config.php: true
    apps.config.php: true
    autoconfig.php: false
    redis.config.php: false
    smtp.config.php: true

  extraEnv:
  - name: POSTGRES_ADDR
    valueFrom:
      secretKeyRef:
        name: nextcloud-postgres-secret
        key: connectionString
  - name: REDIS_ADDR
    valueFrom:
      secretKeyRef:
        name: nextcloud-redis-secret
        key: connectionString
  - name: S3_BUCKET
    valueFrom:
      secretKeyRef:
        name: nextcloud-s3-secret
        key: bucket
  - name: S3_ENDPOINT
    valueFrom:
      secretKeyRef:
        name: nextcloud-s3-secret
        key: endpoint
  - name: S3_REGION
    valueFrom:
      secretKeyRef:
        name: nextcloud-s3-secret
        key: region
  - name: S3_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: nextcloud-s3-secret
        key: accessKey
  - name: S3_SECRET_KEY
    valueFrom:
      secretKeyRef:
        name: nextcloud-s3-secret
        key: secretKey
  - name: PHP_MEMORY_LIMIT
    value: "-1"
  - name: PHP_UPLOAD_LIMIT
    value: 32G

  extraSidecarContainers:
  - name: s3proxy
    image: ghcr.io/razzie/s3proxy:v1.2
    args:
    - -addr
    - localhost:6080
    - -endpoint
    - https://$(S3_ENDPOINT)
    - -encryption-key
    - $(S3_ENCRYPTION_KEY)
    env:
    - name: S3_ENDPOINT
      valueFrom:
        secretKeyRef:
          name: nextcloud-s3-secret
          key: endpoint
    - name: S3_ENCRYPTION_KEY
      valueFrom:
        secretKeyRef:
          name: nextcloud-s3-secret
          key: encryptionKey
    resources:
      requests:
        memory: "64Mi"
        cpu: "25m"
      limits:
        memory: "386Mi"
        cpu: "500m"

cronjob:
  enabled: true
  image:
    repository: ghcr.io/razzie/curl
    tag: latest
  annotations: {}
  failedJobsHistoryLimit: 5
  schedule: '*/5 * * * *'
  successfulJobsHistoryLimit: 2

internalDatabase:
  enabled: false

externalDatabase:
  enabled: true
  type: postgresql

persistence:
  accessMode: ReadWriteOnce
  annotations: {}
  enabled: true
  size: 2Gi

livenessProbe:
  enabled: false
  failureThreshold: 6

readinessProbe:
  enabled: false

startupProbe:
  enabled: false

resources:
  requests:
    memory: "512Mi"
    cpu: "200m"
  limits:
    memory: "3Gi"
    cpu: "3000m"
